{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ajs-dnd/./src/js/trello.js","webpack://ajs-dnd/./src/js/app.js","webpack://ajs-dnd/./src/js/memory.js","webpack://ajs-dnd/./src/js/dnd.js"],"sourcesContent":["export default class Trello {\n    constructor(storage) {\n      this.todo = document.querySelector('.todo-in');\n      this.progress = document.querySelector('.progress-in');\n      this.done = document.querySelector('.done-in');\n      this.addCardBtn = document.querySelectorAll('.add-card');\n      this.card = document.querySelector('.card-block');\n      this.textArea = document.querySelector('.card-text');\n      this.text = null;\n      this.storage = storage;\n    }\n  \n    events() {\n      this.renderDom();\n      this.addAnotherCard();\n      this.moveMouseRemoveDiv();\n    }\n  \n    renderDom() {\n      const card = this.storage.load();\n  \n      if (card) {\n        if (card.todo) {\n          card.todo.forEach((elem) => {\n            Trello.createNewDiv(this.todo, elem);\n          });\n        }\n        if (card.progress) {\n          card.progress.forEach((elem) => {\n            Trello.createNewDiv(this.progress, elem);\n          });\n        }\n        if (card.done) {\n          card.done.forEach((elem) => {\n            Trello.createNewDiv(this.done, elem);\n          });\n        }\n      }\n    }\n  \n    addAnotherCard() {\n      for (const i of this.addCardBtn) {\n        i.addEventListener('click', (ev) => {\n          ev.preventDefault();\n          const cloneCard = this.card.cloneNode(true);\n          cloneCard.classList.remove('none');\n          i.closest('div').appendChild(cloneCard);\n          i.classList.add('none');\n          this.inputText(cloneCard.children[0]);\n          this.addCardInDiv(cloneCard.children[1].children[0], i.closest('div').children[1], i, cloneCard);\n          Trello.cancelAddCardInDiv(cloneCard.children[1].children[1], i, cloneCard);\n        });\n      }\n    }\n  \n    static createNewDiv(div, elem) {\n      if (elem === null) return;\n      const newDiv = document.createElement('div');\n      newDiv.textContent = elem;\n      newDiv.classList.add('new-div');\n      div.appendChild(newDiv);\n      const newDivRemove = document.createElement('span');\n      newDivRemove.classList.add('new-div-remove');\n      newDivRemove.classList.add('none');\n      newDivRemove.textContent = '\\u{00D7}';\n      newDiv.appendChild(newDivRemove);\n    }\n  \n    inputText(element) {\n      element.addEventListener('input', (ev) => {\n        this.text = ev.target.value;\n      });\n    }\n  \n    addCardInDiv(element, div, addLink, clone) {\n      element.addEventListener('click', () => {\n        Trello.createNewDiv(div, this.text);\n        clone.remove();\n        addLink.classList.remove('none');\n        this.saveCards(div, this.text);\n        this.moveMouseRemoveDiv();\n      });\n    }\n  \n    static cancelAddCardInDiv(element, addLink, clone) {\n      element.addEventListener('click', () => {\n        clone.remove();\n        addLink.classList.remove('none');\n      });\n    }\n  \n    moveMouseRemoveDiv() {\n      const divs = document.querySelectorAll('.new-div');\n      for (const i of divs) {\n        i.addEventListener('mouseover', () => {\n          if (i.children[0].classList.contains('none')) {\n            i.children[0].classList.remove('none');\n          }\n        });\n        i.addEventListener('mouseout', () => {\n          if (!i.children[0].classList.contains('none')) {\n            i.children[0].classList.add('none');\n          }\n        });\n      }\n      for (const i of divs) {\n        i.children[0].addEventListener('click', () => {\n          i.remove();\n          this.storage.updateCards(this.todo, this.progress, this.done);\n        });\n      }\n    }\n  \n    saveCards(element, text) {\n      if (element.contains(this.todo)) {\n        this.storage.save({ todo: text });\n      } else if (element.contains(this.progress)) {\n        this.storage.save({ progress: text });\n      } else if (element.contains(this.done)) {\n        this.storage.save({ done: text });\n      }\n      if (this.text !== null) this.text = null;\n    }\n  }","import Memory from './memory';\nimport Trello from './trello';\nimport DnD from './dnd';\n\nconst storage = new Memory();\nconst trello = new Trello(storage);\nconst dragged = new DnD(storage);\n\ntrello.events();\ndragged.events();","export default class Memory {\n    constructor() {\n      this.storage = localStorage;\n    }\n  \n    save(object) {\n      let card = JSON.parse(this.storage.getItem('card'));\n      if (card === null) {\n        card = {\n          todo: [],\n          progress: [],\n          done: [],\n        };\n      }\n  \n      if (object.todo) {\n        card.todo.push(object.todo);\n      } else if (object.progress) {\n        card.progress.push(object.progress);\n      } else if (object.done) {\n        card.done.push(object.done);\n      }\n      this.storage.setItem('card', JSON.stringify(card));\n    }\n  \n    load() {\n      try {\n        const card = JSON.parse(this.storage.getItem('card'));\n        return card;\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n  \n    clear() {\n      this.storage.removeItem('card');\n    }\n  \n    updateCards(todo, progress, done) {\n      this.clear();\n      for (const i of todo.children) {\n        const text = i.textContent;\n        this.save({ todo: text.slice(0, text.length - 1) });\n      }\n      for (const i of progress.children) {\n        const text = i.textContent;\n        this.save({ progress: text.slice(0, text.length - 1) });\n      }\n      for (const i of done.children) {\n        const text = i.textContent;\n        this.save({ done: text.slice(0, text.length - 1) });\n      }\n    }\n  }","export default class DnD {\n    constructor(storage) {\n      this.container = document.querySelector('#container');\n      this.todo = document.querySelector('.todo-in');\n      this.progress = document.querySelector('.progress-in');\n      this.dndIn = document.querySelectorAll('.dnd-in');\n      this.done = document.querySelector('.done-in');\n      this.cloneEl = null;\n      this.draggedEl = null;\n      this.storage = storage;\n      this.grabX = null;\n      this.grabY = null;\n      this.osX = null;\n      this.osY = null;\n    }\n  \n    events() {\n      this.dragMouseDown(this.dndIn);\n      this.dragMouseMove(this.container);\n      this.dragMouseLeave(this.container);\n      this.dropElement(this.container);\n    }\n  \n    dragMouseDown(element) {\n      for (const i of element) {\n        i.addEventListener('mousedown', (ev) => {\n          ev.preventDefault();\n          if (!ev.target.classList.contains('new-div')) {\n            return;\n          }\n          this.draggedEl = ev.target;\n          this.cloneEl = ev.target.cloneNode(true);\n          this.cloneEl.classList.add('dragged');\n          this.draggedEl.classList.add('opacity');\n          document.body.appendChild(this.cloneEl);\n          document.body.style.cursor = 'grabbing';\n          this.grabX = ev.pageX;\n          this.grabY = ev.pageY;\n          this.osX = this.draggedEl.offsetLeft;\n          this.osY = this.draggedEl.offsetTop;\n          this.cloneEl.style.left = `${this.draggedEl.offsetLeft}px`;\n          this.cloneEl.style.top = `${this.draggedEl.offsetTop}px`;\n        });\n      }\n    }\n  \n    dragMouseMove(element) {\n      element.addEventListener('mousemove', (ev) => {\n        ev.preventDefault();\n        if (!this.draggedEl) {\n          return;\n        }\n        const closest = document.elementFromPoint(ev.clientX, ev.clientY);\n  \n        if (closest.parentElement.classList.contains('dnd-in')) {\n          this.draggedEl.classList.add('opacity');\n          if ((ev.clientY - (closest.offsetTop + (closest.offsetHeight / 2))) < 0) {\n            closest.parentElement.insertBefore(this.draggedEl, closest);\n          } else {\n            closest.parentElement.insertBefore(this.draggedEl, closest.nextSibling);\n          }\n        }\n        this.cloneEl.style.left = `${ev.pageX - (this.grabX - this.osX)}px`;\n        this.cloneEl.style.top = `${ev.pageY - (this.grabY - this.osY)}px`;\n      });\n    }\n  \n    dragMouseLeave(element) {\n      element.addEventListener('mouseleave', () => {\n        if (!this.draggedEl) {\n          return;\n        }\n        this.draggedEl.classList.remove('opacity');\n        document.body.removeChild(this.cloneEl);\n        this.cloneEl = null;\n        this.draggedEl = null;\n      });\n    }\n  \n    dropElement(element) {\n      element.addEventListener('mouseup', (ev) => {\n        if (!this.draggedEl) {\n          return;\n        }\n        const closest = document.elementFromPoint(ev.clientX, ev.clientY);\n        if (closest.parentElement.classList.contains('dnd-in')) {\n          closest.parentElement.insertBefore(this.draggedEl, closest);\n        } else if (closest.classList.contains('dnd-in')) {\n          closest.appendChild(this.draggedEl);\n        }\n        document.body.removeChild(this.cloneEl);\n        document.body.style = '';\n        this.draggedEl.classList.remove('opacity');\n        this.cloneEl = null;\n        this.draggedEl = null;\n        this.storage.updateCards(this.todo, this.progress, this.done);\n      });\n    }\n  }"],"names":["Trello","constructor","storage","this","todo","document","querySelector","progress","done","addCardBtn","querySelectorAll","card","textArea","text","events","renderDom","addAnotherCard","moveMouseRemoveDiv","load","forEach","elem","createNewDiv","i","addEventListener","ev","preventDefault","cloneCard","cloneNode","classList","remove","closest","appendChild","add","inputText","children","addCardInDiv","cancelAddCardInDiv","static","div","newDiv","createElement","textContent","newDivRemove","element","target","value","addLink","clone","saveCards","divs","contains","updateCards","save","localStorage","object","JSON","parse","getItem","push","setItem","stringify","error","Error","clear","removeItem","slice","length","trello","dragged","container","dndIn","cloneEl","draggedEl","grabX","grabY","osX","osY","dragMouseDown","dragMouseMove","dragMouseLeave","dropElement","body","style","cursor","pageX","pageY","offsetLeft","offsetTop","left","top","elementFromPoint","clientX","clientY","parentElement","offsetHeight","insertBefore","nextSibling","removeChild"],"sourceRoot":""}